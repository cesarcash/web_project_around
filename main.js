!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,n(o.key),o)}}function n(e){var n=function(e,n){if("object"!=t(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==t(n)?n:n+""}var r=function(){return t=function t(e,n){var r=e.data,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=r,this._renderer=o,this._container=document.querySelector(n)},(n=[{key:"renderItems",value:function(){var t=this;this._clear(),this._items.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.append(t)}},{key:"_clear",value:function(){this._container.innerHTML=""}}])&&e(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,n}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,u(r.key),r)}}function u(t){var e=function(t,e){if("object"!=o(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==o(e)?e:e+""}var c,a,l,s=function(){function t(e,n,r,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._likes=e.likes,this._idUser=e.owner._id,this._idCard=e._id,this._cardSelector=n,this._handleCardClick=r,this._handleOpenPopup=o,this._handleLikeCard=i}return e=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".post__item").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var t=this;this._element.querySelector(".button_action_like").addEventListener("click",(function(e){t._handleLikeClick(),t._handleLikeCard(e,t._idCard)})),this._element.querySelector(".button_action_delete").addEventListener("click",(function(){t._handleOpenPopup(t._idCard)})),this._element.querySelector(".post__image").addEventListener("click",(function(e){t._handleCardClick(t._link,t._name)}))}},{key:"_handleLikeClick",value:function(){this._element.querySelector(".button_action_like").classList.toggle("button_is_active")}},{key:"generateCard",value:function(){var e=this;return this._element=this._getTemplate(),this._idUser!=t._idUser&&(this._element.querySelector(".button_action_delete").style.display="none"),this._likes.forEach((function(n){n._id===t._idUser&&e._element.querySelector(".button_action_like").classList.add("button_is_active")})),this._setEventListeners(),this._element.setAttribute("idCard",this._idCard),this._element.querySelector(".post__image").setAttribute("src",this._link),this._element.querySelector(".post__image").setAttribute("alt",this._name),this._element.querySelector(".post__name").textContent=this._name,this._element.querySelector(".post__likes").textContent=this._likes.length,this._element}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function p(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,y(r.key),r)}}function y(t){var e=function(t,e){if("object"!=f(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=f(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==f(e)?e:e+""}c=s,l=void 0,(a=u(a="_idUser"))in c?Object.defineProperty(c,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):c[a]=l;var d=function(){return t=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this.open=this.open.bind(this)},(e=[{key:"open",value:function(){this._popup.classList.add("popup_opened")}},{key:"close",value:function(){this._popup.classList.remove("popup_opened")}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this._popup.classList.contains("popup_opened")&&this.close()}},{key:"setEventListeners",value:function(){var t=this;window.addEventListener("keydown",(function(e){t._handleEscClose(e)})),this._popup.querySelector(".button_action_close").addEventListener("click",(function(e){t.close()})),window.addEventListener("click",(function(e){e.target.classList.contains("popup_opened")&&t.close()}))}}])&&p(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function h(t){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},h(t)}function v(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function b(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,m(r.key),r)}}function m(t){var e=function(t,e){if("object"!=h(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=h(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==h(e)?e:e+""}function _(t,e,n){return e=w(e),function(t,e){if(e&&("object"===h(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,S()?Reflect.construct(e,n||[],w(t).constructor):e.apply(t,n))}function S(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(S=function(){return!!t})()}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=w(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},g.apply(this,arguments)}function w(t){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},w(t)}function k(t,e){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},k(t,e)}var j=function(t){function e(t,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=_(this,e,[n]))._callbackForm=t,r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&k(t,e)}(e,t),n=e,(r=[{key:"_getInputValues",value:function(){var t,e={},n=function(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=function(t,e){if(t){if("string"==typeof t)return v(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?v(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var r=0,o=function(){};return{s:o,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,u=!0,c=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return u=t.done,t},e:function(t){c=!0,i=t},f:function(){try{u||null==n.return||n.return()}finally{if(c)throw i}}}}(this._popup.querySelectorAll(".form__input"));try{for(n.s();!(t=n.n()).done;){var r=t.value;e[r.name]=r.value}}catch(t){n.e(t)}finally{n.f()}return e}},{key:"open",value:function(){g(w(e.prototype),"open",this).call(this)}},{key:"close",value:function(){g(w(e.prototype),"close",this).call(this),this._popup.querySelectorAll(".form").forEach((function(t){t.reset()}))}},{key:"setEventListeners",value:function(){var t=this;g(w(e.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(e){e.preventDefault();var n=t._getInputValues();t._callbackForm(e.target,n),t.close()}))}}])&&b(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(d);function E(t){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},E(t)}function P(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,C(r.key),r)}}function C(t){var e=function(t,e){if("object"!=E(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=E(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==E(e)?e:e+""}function O(t,e,n){return e=T(e),function(t,e){if(e&&("object"===E(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,L()?Reflect.construct(e,n||[],T(t).constructor):e.apply(t,n))}function L(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(L=function(){return!!t})()}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=T(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},q.apply(this,arguments)}function T(t){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},T(t)}function I(t,e){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},I(t,e)}var x=function(t){function e(t,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=O(this,e,[n]))._callbackForm=t,r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&I(t,e)}(e,t),n=e,(r=[{key:"open",value:function(t){q(T(e.prototype),"open",this).call(this),this._idCard=t}},{key:"setEventListeners",value:function(){var t=this;q(T(e.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("click",(function(n){n.target.value&&(t._callbackForm(t._idCard),q(T(e.prototype),"close",t).call(t))}))}}])&&P(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(d);function A(t){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},A(t)}function U(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,z(r.key),r)}}function z(t){var e=function(t,e){if("object"!=A(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=A(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==A(e)?e:e+""}function R(t,e,n){return e=N(e),function(t,e){if(e&&("object"===A(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,B()?Reflect.construct(e,n||[],N(t).constructor):e.apply(t,n))}function B(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(B=function(){return!!t})()}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=N(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},D.apply(this,arguments)}function N(t){return N=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},N(t)}function V(t,e){return V=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},V(t,e)}var F=function(t){function e(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),R(this,e,[t])}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&V(t,e)}(e,t),n=e,(r=[{key:"open",value:function(t,n){D(N(e.prototype),"open",this).call(this),this._popup.querySelector(".popup__view-image").setAttribute("src",t),this._popup.querySelector(".popup__view-image").setAttribute("alt",n),this._popup.querySelector(".popup__text").textContent=n}},{key:"setEventListeners",value:function(){D(N(e.prototype),"setEventListeners",this).call(this)}}])&&U(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(d);function G(t){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},G(t)}function H(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,M(r.key),r)}}function M(t){var e=function(t,e){if("object"!=G(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=G(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==G(e)?e:e+""}var J=function(){return t=function t(e){var n=e.user,r=e.description;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._selectUser=document.querySelector(n),this._selectWork=document.querySelector(r)},(e=[{key:"getUserInfo",value:function(){return{user:this._selectUser.textContent,work:this._selectWork.textContent}}},{key:"setUserInfo",value:function(t,e){this._selectUser.textContent=t,this._selectWork.textContent=e}}])&&H(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function W(t){return W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},W(t)}function $(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,K(r.key),r)}}function K(t){var e=function(t,e){if("object"!=W(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=W(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==W(e)?e:e+""}var Q=function(){return t=function t(e){var n=e.headers;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._headers=n},(e=[{key:"getInitialCards",value:function(t){return fetch(t,{headers:{authorization:this._headers.authorization,"Content-Type":this._headers.type}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status," "))}))}},{key:"getInfoUser",value:function(t){return fetch(t,{headers:{authorization:this._headers.authorization,"Content-Type":this._headers.type}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status," "))}))}},{key:"editInfoUser",value:function(t,e){var n=t.nameProfile,r=t.aboutMe;return fetch(e,{method:"PATCH",headers:{authorization:this._headers.authorization,"Content-Type":this._headers.type},body:JSON.stringify({name:n,about:r})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status," "))}))}},{key:"setNewCard",value:function(t,e){var n=t.title,r=t.url;return fetch(e,{method:"POST",headers:{authorization:this._headers.authorization,"Content-Type":this._headers.type},body:JSON.stringify({name:n,link:r})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status," "))}))}},{key:"deleteCard",value:function(t){return fetch(t,{method:"DELETE",headers:{authorization:this._headers.authorization,"Content-Type":this._headers.type}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status," "))}))}},{key:"addLikeCard",value:function(t){return fetch(t,{method:"PUT",headers:{authorization:this._headers.authorization,"Content-Type":this._headers.type}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status," "))}))}},{key:"removeLikeCard",value:function(t){return fetch(t,{method:"DELETE",headers:{authorization:this._headers.authorization,"Content-Type":this._headers.type}}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status," "))}))}},{key:"editImgUser",value:function(t,e){return fetch(t,{method:"PATCH",headers:{authorization:this._headers.authorization,"Content-Type":this._headers.type},body:JSON.stringify({avatar:e})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status," "))}))}}])&&$(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}(),X="web_es_11/",Y="https://around.nomoreparties.co/v1/",Z=(document.querySelector("#popup"),document.querySelector(".popup__image"),document.querySelector(".popup__form"),document.querySelector("#popupAdd"),document.querySelector("#popupEdit"),document.querySelectorAll(".button_action_close"),document.querySelector("#formEditProfile")),tt=document.querySelector("#formNewPost"),et=document.querySelector("#formEditPhoto"),nt=document.querySelector("#button__edit"),rt=document.querySelector("#button__add"),ot=document.querySelector(".user__picture"),it=document.querySelector("#name-input"),ut=document.querySelector("#about-input"),ct=document.querySelector(".user__photo"),at="#post",lt=Y+X+"users/me",st=Y+X+"cards",ft=Y+X+"cards/likes",pt=Y+X+"users/me/avatar",yt="aeb303a7-85a3-41cc-b9b3-71f2eddd73ac",dt="application/json",ht=new Q({headers:{authorization:yt,type:dt}}),vt={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"};function bt(t,e){var n=t.target;n.classList.contains("button_is_active")?ht.addLikeCard(ft+"/"+e).then((function(t){mt(n,t)})).catch((function(t){return console.log(t)})):ht.removeLikeCard(ft+"/"+e).then((function(t){mt(n,t)})).catch((function(t){return console.log(t)}))}function mt(t,e){var n=t.nextElementSibling,r=e.likes.length;n.textContent=r}function _t(t){return _t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_t(t)}function St(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,gt(r.key),r)}}function gt(t){var e=function(t,e){if("object"!=_t(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=_t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==_t(e)?e:e+""}var wt=function(){return t=function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=e,this._form=n},(e=[{key:"_showInputError",value:function(t,e,n,r){var o=t.querySelector(".".concat(e.id,"-error"));e.classList.add(r.inputErrorClass),o.textContent=n,o.classList.add(r.errorClass)}},{key:"_hideInputError",value:function(t,e,n){var r=t.querySelector(".".concat(e.id,"-error"));e.classList.remove(n.inputErrorClass),r.classList.remove(n.errorClass),r.textContent=""}},{key:"_checkInputValidity",value:function(t,e,n){e.validity.valid?this._hideInputError(t,e,n):this._showInputError(t,e,e.validationMessage,n)}},{key:"_hasInvalidInput",value:function(t){return t.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(t,e,n){this._hasInvalidInput(t)?e.classList.add(n.inactiveButtonClass):e.classList.remove(n.inactiveButtonClass)}},{key:"_setEventListeners",value:function(t,e){var n=this,r=Array.from(t.querySelectorAll(e.inputSelector)),o=t.querySelector(e.submitButtonSelector);this._toggleButtonState(r,o,e),r.forEach((function(i){i.addEventListener("input",(function(){n._toggleButtonState(r,o,e),n._checkInputValidity(t,i,e)}))}))}},{key:"_sendForm",value:function(t){t.preventDefault()}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",this._sendForm),this._setEventListeners(this._form,this._config)}}])&&St(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}(),kt=new Q({headers:{authorization:yt,type:dt}}),jt=kt.getInitialCards(st);kt.getInfoUser(lt).then((function(t){var e,n,r,o;n=(e=t).about,r=e.name,o=e.avatar,document.querySelector("#userName").textContent=r,document.querySelector("#userDescription").textContent=n,ct.src=o,ct.alt=r,s._idUser=t._id})).catch((function(t){return console.log(t)})),jt.then((function(t){var e=new r({data:t,renderer:function(t){var n=new s(t,"#postTemplate",Lt.open,qt.open,bt).generateCard();e.addItem(n)}},at);e.renderItems()})).catch((function(t){return console.log(t)}));var Et=new J({user:"#userName",description:"#userDescription"}),Pt=new wt(vt,Z),Ct=new wt(vt,et),Ot=new wt(vt,tt),Lt=new F("#popupImage"),qt=new x((function(t){kt.deleteCard("".concat(st,"/").concat(t)).then((function(e){document.querySelector('section[idcard="'.concat(t,'"]')).remove()})).catch((function(t){return console.log("Hubo un error al eliminar la tarjeta "+t)}))}),"#popupDelete"),Tt=new j((function(t,e){var n=kt.editInfoUser(e,lt),r=t.querySelector(".form__button");r.textContent="Guardando...",n.then((function(t){Et.setUserInfo(t.name,t.about)})).catch((function(t){return console.log("Aqui es error "+t)})).finally((function(){r.textContent="Guardar"}))}),"#popupEdit"),It=new j((function(t,e){var n=kt.setNewCard(e,st),r=t.querySelector(".form__button");r.textContent="Guardando...",n.then((function(t){var e=document.querySelector(at),n=new s(t,"#postTemplate",Lt.open,qt.open,bt).generateCard();e.prepend(n)})).catch((function(t){return console.log("Hay un error: "+t)})).finally((function(){r.textContent="Crear"}))}),"#popupAdd"),xt=new j((function(t,e){var n=kt.editImgUser(pt,e.avatar),r=t.querySelector(".form__button");r.textContent="Guardando...",n.then((function(t){ct.src=t.avatar,ct.alt=t.name})).catch((function(t){return console.log(t)})).finally((function(){r.textContent="Guardar"}))}),"#popupPhoto");nt.addEventListener("click",(function(){var t=Et.getUserInfo();it.value=t.user,ut.value=t.work,Tt.open()})),ot.addEventListener("click",(function(){xt.open()})),xt.setEventListeners(),xt.close(),Tt.setEventListeners(),Tt.close(),rt.addEventListener("click",(function(){It.open()})),It.setEventListeners(),It.close(),Lt.setEventListeners(),qt.setEventListeners(),Pt.enableValidation(),Ot.enableValidation(),Ct.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE1BQUssU0FBQUMsR0FDaEI4QixHQUFVb0QsSUFBTWxGLEVBQUltQixPQUNwQlcsR0FBVXFELElBQU1uRixFQUFJdEYsSUFDdEIsSUFDQ3VJLE9BQU0sU0FBQUMsR0FBSyxPQUFJQyxRQUFRQyxJQUFJRixFQUFNLElBQ2pDb0QsU0FBUSxXQUNQRixFQUFRN0osWUFBYyxTQUN4QixHQUVGLEdBQUUsZUFFRmtGLEdBQVEvRixpQkFBaUIsU0FBUyxXQUNoQyxJQUFNcUwsRUFBV25CLEdBQVNvQixjQUMxQnBGLEdBQVVoSSxNQUFRbU4sRUFBUzVILEtBQzNCMEMsR0FBV2pJLE1BQVFtTixFQUFTeEgsS0FDNUIwRyxHQUFjckosTUFDaEIsSUFFQStFLEdBQVNqRyxpQkFBaUIsU0FBUyxXQUNqQ2tMLEdBQWVoSyxNQUNqQixJQUVBZ0ssR0FBZUssb0JBQ2ZMLEdBQWUzSixRQUVmZ0osR0FBY2dCLG9CQUNkaEIsR0FBY2hKLFFBRWR5RSxHQUFPaEcsaUJBQWlCLFNBQVMsV0FDL0I2SyxHQUFhM0osTUFDZixJQUVBMkosR0FBYVUsb0JBQ2JWLEdBQWF0SixRQUVic0ksR0FBZTBCLG9CQUNmekIsR0FBc0J5QixvQkFFdEJwQixHQUFnQnFCLG1CQUNoQm5CLEdBQWFtQixtQkFDYnBCLEdBQWVvQixrQiIsInNvdXJjZXMiOlsid2VicGFjazovL3RyaXBsZXRlbi8uL3NyYy9zY3JpcHRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vdHJpcGxldGVuLy4vc3JjL3NjcmlwdHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly90cmlwbGV0ZW4vLi9zcmMvc2NyaXB0cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly90cmlwbGV0ZW4vLi9zcmMvc2NyaXB0cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3RyaXBsZXRlbi8uL3NyYy9zY3JpcHRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly90cmlwbGV0ZW4vLi9zcmMvc2NyaXB0cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly90cmlwbGV0ZW4vLi9zcmMvc2NyaXB0cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly90cmlwbGV0ZW4vLi9zcmMvc2NyaXB0cy9BcGkuanMiLCJ3ZWJwYWNrOi8vdHJpcGxldGVuLy4vc3JjL3NjcmlwdHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vdHJpcGxldGVuLy4vc3JjL3NjcmlwdHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly90cmlwbGV0ZW4vLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKHtkYXRhLHJlbmRlcmVyfSwgY29udGFpbmVyU2VsZWN0b3Ipe1xyXG4gICAgICAgIHRoaXMuX2l0ZW1zID0gZGF0YTtcclxuICAgICAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlckl0ZW1zKCl7XHJcblxyXG4gICAgICAgIHRoaXMuX2NsZWFyKCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgfVxyXG5cclxuICAgIGFkZEl0ZW0oZWxlbWVudCl7XHJcbiAgICAgICAgdGhpcy5fY29udGFpbmVyLmFwcGVuZChlbGVtZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBfY2xlYXIoKXtcclxuICAgICAgICB0aGlzLl9jb250YWluZXIuaW5uZXJIVE1MID0gJyc7XHJcbiAgICB9XHJcblxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcblxyXG4gICAgc3RhdGljIF9pZFVzZXIgO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGRhdGEsY2FyZFNlbGVjdG9yLGhhbmRsZUNhcmRDbGljayxoYW5kbGVPcGVuUG9wdXAsaGFuZGxlTGlrZUNhcmQpe1xyXG4gICAgICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XHJcbiAgICAgICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcclxuICAgICAgICB0aGlzLl9saWtlcyA9IGRhdGEubGlrZXM7XHJcbiAgICAgICAgdGhpcy5faWRVc2VyID0gZGF0YS5vd25lci5faWQ7XHJcbiAgICAgICAgdGhpcy5faWRDYXJkID0gZGF0YS5faWQ7XHJcbiAgICAgICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcclxuICAgICAgICB0aGlzLl9oYW5kbGVPcGVuUG9wdXAgPSBoYW5kbGVPcGVuUG9wdXA7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlTGlrZUNhcmQgPSBoYW5kbGVMaWtlQ2FyZDtcclxuICAgIH1cclxuXHJcbiAgICBfZ2V0VGVtcGxhdGUoKXtcclxuICAgICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpLmNvbnRlbnQucXVlcnlTZWxlY3RvcignLnBvc3RfX2l0ZW0nKS5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgX3NldEV2ZW50TGlzdGVuZXJzKCl7XHJcblxyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmJ1dHRvbl9hY3Rpb25fbGlrZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrKCk7XHJcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZUxpa2VDYXJkKGUsdGhpcy5faWRDYXJkKVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmJ1dHRvbl9hY3Rpb25fZGVsZXRlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZU9wZW5Qb3B1cCh0aGlzLl9pZENhcmQpXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcucG9zdF9faW1hZ2UnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayh0aGlzLl9saW5rLHRoaXMuX25hbWUpXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICB9XHJcbiAgICBcclxuICAgIF9oYW5kbGVMaWtlQ2xpY2soKXtcclxuICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idXR0b25fYWN0aW9uX2xpa2UnKS5jbGFzc0xpc3QudG9nZ2xlKCdidXR0b25faXNfYWN0aXZlJyk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2VuZXJhdGVDYXJkKCl7XHJcblxyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmKHRoaXMuX2lkVXNlciAhPSBDYXJkLl9pZFVzZXIpe1xyXG4gICAgICAgICAgICBjb25zdCBidXR0b25EZWxldGUgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idXR0b25fYWN0aW9uX2RlbGV0ZScpXHJcbiAgICAgICAgICAgIGJ1dHRvbkRlbGV0ZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5fbGlrZXMuZm9yRWFjaChsaWtlSXRlbSA9PiB7XHJcblxyXG4gICAgICAgICAgICBpZihsaWtlSXRlbS5faWQgPT09IENhcmQuX2lkVXNlcil7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idXR0b25fYWN0aW9uX2xpa2UnKS5jbGFzc0xpc3QuYWRkKCdidXR0b25faXNfYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgICB0aGlzLl9lbGVtZW50LnNldEF0dHJpYnV0ZSgnaWRDYXJkJyx0aGlzLl9pZENhcmQpO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvc3RfX2ltYWdlJykuc2V0QXR0cmlidXRlKCdzcmMnLHRoaXMuX2xpbmspO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvc3RfX2ltYWdlJykuc2V0QXR0cmlidXRlKCdhbHQnLHRoaXMuX25hbWUpO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvc3RfX25hbWUnKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcucG9zdF9fbGlrZXMnKS50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzLmxlbmd0aDtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuXHJcbiAgICB9XHJcblxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3Ipe1xyXG4gICAgICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLm9wZW4gPSB0aGlzLm9wZW4uYmluZCh0aGlzKVxyXG4gICAgfVxyXG5cclxuICAgIG9wZW4oKXtcclxuICAgICAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZSgpe1xyXG4gICAgICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwX29wZW5lZCcpO1xyXG4gICAgfVxyXG5cclxuICAgIF9oYW5kbGVFc2NDbG9zZShldnQpe1xyXG4gICAgICAgIGlmKGV2dC5rZXkgPT09ICdFc2NhcGUnICYmIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfb3BlbmVkJykpe1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpe1xyXG5cclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChldnQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UoZXZ0KTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcuYnV0dG9uX2FjdGlvbl9jbG9zZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICBpZihldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfb3BlbmVkJykpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgfVxyXG5cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihjYWxsYmFja0Zvcm0sc2VsZWN0b3JQb3B1cCkge1xyXG4gICAgICAgIHN1cGVyKHNlbGVjdG9yUG9wdXApO1xyXG4gICAgICAgIHRoaXMuX2NhbGxiYWNrRm9ybSA9IGNhbGxiYWNrRm9ybTtcclxuICAgIH1cclxuXHJcbiAgICBfZ2V0SW5wdXRWYWx1ZXMoKXtcclxuXHJcbiAgICAgICAgY29uc3QgaW5wdXRGb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvckFsbCgnLmZvcm1fX2lucHV0JylcclxuICAgICAgICBjb25zdCBkYXRhID0ge307XHJcblxyXG4gICAgICAgIGZvcihjb25zdCBpbnB1dFRleHQgb2YgaW5wdXRGb3JtKXtcclxuICAgICAgICAgICAgZGF0YVtpbnB1dFRleHQubmFtZV0gPSBpbnB1dFRleHQudmFsdWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gZGF0YTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgb3Blbigpe1xyXG4gICAgICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZSgpe1xyXG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICAgICAgdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvckFsbCgnLmZvcm0nKS5mb3JFYWNoKGZvcm1JdGVtID0+IHtcclxuICAgICAgICAgICAgZm9ybUl0ZW0ucmVzZXQoKTtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCl7XHJcblxyXG4gICAgICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICAgICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgY29uc3QgZm9ybURhdGEgPSB0aGlzLl9nZXRJbnB1dFZhbHVlcygpO1xyXG4gICAgICAgICAgICB0aGlzLl9jYWxsYmFja0Zvcm0oZXZ0LnRhcmdldCxmb3JtRGF0YSk7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNhbGxiYWNrRm9ybSxzZWxlY3RvclBvcHVwKXtcclxuICAgICAgICBzdXBlcihzZWxlY3RvclBvcHVwKVxyXG4gICAgICAgIHRoaXMuX2NhbGxiYWNrRm9ybSA9IGNhbGxiYWNrRm9ybTtcclxuICAgIH1cclxuXHJcbiAgICBvcGVuKGlkKXtcclxuXHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgICAgIHRoaXMuX2lkQ2FyZCA9IGlkO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpe1xyXG4gICAgICAgIFxyXG4gICAgICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBldnQgPT4ge1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYoZXZ0LnRhcmdldC52YWx1ZSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jYWxsYmFja0Zvcm0odGhpcy5faWRDYXJkKVxyXG4gICAgICAgICAgICAgICAgc3VwZXIuY2xvc2UoKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgfVxyXG5cclxufSIsImltcG9ydCBQb3B1cCBmcm9tICcuL1BvcHVwLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHNlbGVjdG9yUG9wdXApe1xyXG4gICAgICAgIHN1cGVyKHNlbGVjdG9yUG9wdXApO1xyXG4gICAgfVxyXG5cclxuICAgIG9wZW4obGluayxuYW1lKXtcclxuXHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG5cclxuICAgICAgICB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3ZpZXctaW1hZ2UnKS5zZXRBdHRyaWJ1dGUoJ3NyYycsbGluayk7XHJcbiAgICAgICAgdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX192aWV3LWltYWdlJykuc2V0QXR0cmlidXRlKCdhbHQnLG5hbWUpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fdGV4dCcpLnRleHRDb250ZW50ID0gbmFtZTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKXtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG5cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICAgIFxyXG4gICAgY29uc3RydWN0b3Ioe3VzZXIsZGVzY3JpcHRpb259KXtcclxuICAgICAgICB0aGlzLl9zZWxlY3RVc2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VyKTtcclxuICAgICAgICB0aGlzLl9zZWxlY3RXb3JrID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihkZXNjcmlwdGlvbik7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGdldFVzZXJJbmZvKCl7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdXNlcjogdGhpcy5fc2VsZWN0VXNlci50ZXh0Q29udGVudCxcclxuICAgICAgICAgICAgd29yazogdGhpcy5fc2VsZWN0V29yay50ZXh0Q29udGVudFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzZXRVc2VySW5mbyh1c2VyLHdvcmspe1xyXG4gICAgICAgIHRoaXMuX3NlbGVjdFVzZXIudGV4dENvbnRlbnQgPSB1c2VyO1xyXG4gICAgICAgIHRoaXMuX3NlbGVjdFdvcmsudGV4dENvbnRlbnQgPSB3b3JrO1xyXG4gICAgfVxyXG5cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XHJcblxyXG4gICAgY29uc3RydWN0b3Ioe2hlYWRlcnN9KXtcclxuICAgICAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVycztcclxuICAgIH1cclxuXHJcbiAgICBnZXRJbml0aWFsQ2FyZHModXJsQ2FyZHMpe1xyXG5cclxuICAgICAgICByZXR1cm4gZmV0Y2godXJsQ2FyZHMse1xyXG4gICAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9oZWFkZXJzLmF1dGhvcml6YXRpb24sXHJcbiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogdGhpcy5faGVhZGVycy50eXBlXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKHJlcyA9PiByZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9IGApIClcclxuXHJcbiAgICB9XHJcblxyXG4gICAgZ2V0SW5mb1VzZXIodXJsVXNlcil7XHJcblxyXG4gICAgICAgIHJldHVybiBmZXRjaCh1cmxVc2VyLCB7XHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2hlYWRlcnMuYXV0aG9yaXphdGlvbixcclxuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiB0aGlzLl9oZWFkZXJzLnR5cGVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4ocmVzID0+IHJlcy5vayA/IHJlcy5qc29uKCkgOiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c30gYCkgKSAgICAgICAgXHJcblxyXG4gICAgfVxyXG5cclxuICAgIGVkaXRJbmZvVXNlcih7bmFtZVByb2ZpbGUsYWJvdXRNZX0sdXJsKXtcclxuICAgICAgICBcclxuICAgICAgICByZXR1cm4gZmV0Y2godXJsLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5faGVhZGVycy5hdXRob3JpemF0aW9uLFxyXG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6IHRoaXMuX2hlYWRlcnMudHlwZVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBuYW1lUHJvZmlsZSxcclxuICAgICAgICAgICAgICAgIGFib3V0OiBhYm91dE1lXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbihyZXMgPT4gcmVzLm9rPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9IGApIClcclxuXHJcbiAgICB9XHJcblxyXG4gICAgc2V0TmV3Q2FyZCh7dGl0bGUsdXJsfSwgdXJsQ2FyZHMpe1xyXG4gICAgICAgIFxyXG4gICAgICAgIHJldHVybiBmZXRjaCh1cmxDYXJkcyx7XHJcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9oZWFkZXJzLmF1dGhvcml6YXRpb24sXHJcbiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogdGhpcy5faGVhZGVycy50eXBlXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgICAgIG5hbWU6IHRpdGxlLFxyXG4gICAgICAgICAgICAgICAgbGluazogdXJsXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4ocmVzID0+IHJlcy5vaz8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfSBgKSApXHJcblxyXG4gICAgfVxyXG5cclxuICAgIGRlbGV0ZUNhcmQodXJsKXtcclxuICAgICAgICBcclxuICAgICAgICByZXR1cm4gZmV0Y2godXJsLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2hlYWRlcnMuYXV0aG9yaXphdGlvbixcclxuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiB0aGlzLl9oZWFkZXJzLnR5cGVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAudGhlbihyZXMgPT4gcmVzLm9rPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9IGApIClcclxuXHJcbiAgICB9XHJcblxyXG4gICAgYWRkTGlrZUNhcmQodXJsKXtcclxuXHJcbiAgICAgICAgcmV0dXJuIGZldGNoKHVybCx7XHJcbiAgICAgICAgICAgIG1ldGhvZDogJ1BVVCcsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2hlYWRlcnMuYXV0aG9yaXphdGlvbixcclxuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiB0aGlzLl9oZWFkZXJzLnR5cGVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAudGhlbihyZXMgPT4gcmVzLm9rPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9IGApIClcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlTGlrZUNhcmQodXJsKXtcclxuXHJcbiAgICAgICAgcmV0dXJuIGZldGNoKHVybCx7XHJcbiAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2hlYWRlcnMuYXV0aG9yaXphdGlvbixcclxuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiB0aGlzLl9oZWFkZXJzLnR5cGVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAudGhlbihyZXMgPT4gcmVzLm9rPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9IGApIClcclxuXHJcbiAgICB9XHJcblxyXG4gICAgZWRpdEltZ1VzZXIodXJsLGF2YXRhcil7XHJcblxyXG4gICAgICAgIHJldHVybiBmZXRjaCh1cmwsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9oZWFkZXJzLmF1dGhvcml6YXRpb24sXHJcbiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogdGhpcy5faGVhZGVycy50eXBlXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgICAgIGF2YXRhcjogYXZhdGFyXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbihyZXMgPT4gcmVzLm9rPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9IGApIClcclxuXHJcbiAgICB9XHJcblxyXG59IiwiaW1wb3J0IEFwaSBmcm9tIFwiLi9BcGkuanNcIjtcclxuXHJcbmNvbnN0IGdyb3VwID0gJ3dlYl9lc18xMS8nO1xyXG5jb25zdCBVUkxTZXJ2ZXIgPSBgaHR0cHM6Ly9hcm91bmQubm9tb3JlcGFydGllcy5jby92MS9gO1xyXG5leHBvcnQgY29uc3QgbW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcG9wdXAnKTtcclxuZXhwb3J0IGNvbnN0IG1vZGFsSW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlJyk7XHJcbmV4cG9ydCBjb25zdCBtb2RhbEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcclxuZXhwb3J0IGNvbnN0IG1vZGFsQWRkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3BvcHVwQWRkJyk7XHJcbmV4cG9ydCBjb25zdCBtb2RhbEVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcG9wdXBFZGl0Jyk7XHJcbmV4cG9ydCBjb25zdCBidG5DbG9zZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5idXR0b25fYWN0aW9uX2Nsb3NlJyk7XHJcbmV4cG9ydCBjb25zdCBmb3JtUHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmb3JtRWRpdFByb2ZpbGUnKTtcclxuZXhwb3J0IGNvbnN0IGZvcm1Qb3N0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvcm1OZXdQb3N0Jyk7XHJcbmV4cG9ydCBjb25zdCBmb3JtQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvcm1FZGl0UGhvdG8nKTtcclxuZXhwb3J0IGNvbnN0IGJ0bkVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYnV0dG9uX19lZGl0Jyk7XHJcbmV4cG9ydCBjb25zdCBidG5BZGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYnV0dG9uX19hZGQnKTtcclxuZXhwb3J0IGNvbnN0IGJ0blBob3RvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnVzZXJfX3BpY3R1cmUnKTtcclxuZXhwb3J0IGNvbnN0IGlucHV0TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuYW1lLWlucHV0Jyk7XHJcbmV4cG9ydCBjb25zdCBpbnB1dEFib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Fib3V0LWlucHV0Jyk7XHJcbmV4cG9ydCBjb25zdCB1c2VyUGhvdG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudXNlcl9fcGhvdG8nKTtcclxuZXhwb3J0IGNvbnN0IHBvc3RDb250YWluZXIgPSAnI3Bvc3QnO1xyXG5leHBvcnQgY29uc3QgdG9rZW4gPSAnYWViMzAzYTctODVhMy00MWNjLWI5YjMtNzFmMmVkZGQ3M2FjJztcclxuZXhwb3J0IGNvbnN0IFVSTFVzZXIgPSBVUkxTZXJ2ZXIrZ3JvdXArJ3VzZXJzL21lJztcclxuZXhwb3J0IGNvbnN0IFVSTENhcmRzID0gVVJMU2VydmVyK2dyb3VwKydjYXJkcyc7XHJcbmV4cG9ydCBjb25zdCBVUkxDYXJkTGlrZSA9IFVSTFNlcnZlcitncm91cCsnY2FyZHMvbGlrZXMnO1xyXG5leHBvcnQgY29uc3QgVVJMQXZhdGFyID0gVVJMU2VydmVyK2dyb3VwKyd1c2Vycy9tZS9hdmF0YXInO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbmZpZ0hlYWRlcnMgPSB7XHJcbiAgdG9rZW4sXHJcbiAgdHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbn1cclxuXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xyXG4gIGhlYWRlcnM6IHtcclxuICAgIGF1dGhvcml6YXRpb246IGNvbmZpZ0hlYWRlcnMudG9rZW4sXHJcbiAgICB0eXBlOiBjb25maWdIZWFkZXJzLnR5cGVcclxuICB9XHJcbn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuICAgIGZvcm1TZWxlY3RvcjogXCIuZm9ybVwiLFxyXG4gICAgaW5wdXRTZWxlY3RvcjogXCIuZm9ybV9faW5wdXRcIixcclxuICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5mb3JtX19idXR0b25cIixcclxuICAgIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwiZm9ybV9fYnV0dG9uX2luYWN0aXZlXCIsXHJcbiAgICBpbnB1dEVycm9yQ2xhc3M6IFwiZm9ybV9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gICAgZXJyb3JDbGFzczogXCJmb3JtX19pbnB1dC1lcnJvcl9hY3RpdmVcIlxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2V0SW5mb1VzZXIoe2Fib3V0LG5hbWUsYXZhdGFyfSl7XHJcblxyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN1c2VyTmFtZScpLnRleHRDb250ZW50ID0gbmFtZVxyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN1c2VyRGVzY3JpcHRpb24nKS50ZXh0Q29udGVudCA9IGFib3V0XHJcbiAgdXNlclBob3RvLnNyYyA9IGF2YXRhclxyXG4gIHVzZXJQaG90by5hbHQgPSBuYW1lXHJcblxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlTGlrZUNhcmQoZXZ0LGlkQ2FyZCl7XHJcbiAgXHJcbiAgY29uc3QgYnRuTGlrZSA9IGV2dC50YXJnZXQ7XHJcblxyXG4gIGlmKGJ0bkxpa2UuY2xhc3NMaXN0LmNvbnRhaW5zKCdidXR0b25faXNfYWN0aXZlJykpe1xyXG5cclxuICAgIGFwaS5hZGRMaWtlQ2FyZChVUkxDYXJkTGlrZSsnLycraWRDYXJkKVxyXG4gICAgLnRoZW4ocmVzID0+IHtcclxuICAgICAgY291bnRMaWtlcyhidG5MaWtlLHJlcylcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5sb2coZXJyb3IpKVxyXG5cclxuICB9ZWxzZXtcclxuXHJcbiAgICBhcGkucmVtb3ZlTGlrZUNhcmQoVVJMQ2FyZExpa2UrJy8nK2lkQ2FyZClcclxuICAgIC50aGVuKHJlcyA9PiB7XHJcbiAgICAgIGNvdW50TGlrZXMoYnRuTGlrZSxyZXMpXHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSlcclxuXHJcbiAgfVxyXG5cclxufVxyXG5cclxuZnVuY3Rpb24gY291bnRMaWtlcyhlbGVtZW50LGRhdGEpe1xyXG5cclxuICBjb25zdCBjb250YWluZXIgPSBlbGVtZW50Lm5leHRFbGVtZW50U2libGluZztcclxuICBjb25zdCBsaWtlcyA9IGRhdGEubGlrZXMubGVuZ3RoO1xyXG5cclxuICBjb250YWluZXIudGV4dENvbnRlbnQgPSBsaWtlcztcclxuXHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcsZm9ybSl7XHJcblxyXG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcclxuICAgICAgICB0aGlzLl9mb3JtID0gZm9ybTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgX3Nob3dJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSwgb2JqQ29uZmlnKXtcclxuICAgICAgICBjb25zdCBlcnJvckVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICAgICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQob2JqQ29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKG9iakNvbmZpZy5lcnJvckNsYXNzKTtcclxuICAgIH1cclxuXHJcbiAgICBfaGlkZUlucHV0RXJyb3IoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCwgb2JqQ29uZmlnKXtcclxuICAgICAgICBjb25zdCBlcnJvckVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICAgICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUob2JqQ29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUob2JqQ29uZmlnLmVycm9yQ2xhc3MpO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICB9XHJcblxyXG4gICAgX2NoZWNrSW5wdXRWYWxpZGl0eShmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBvYmpDb25maWcpe1xyXG4gICAgICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSwgb2JqQ29uZmlnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBvYmpDb25maWcpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBfaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCl7XHJcbiAgICAgICAgcmV0dXJuIGlucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCwgb2JqQ29uZmlnKXtcclxuICAgICAgICBpZih0aGlzLl9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSl7XHJcbiAgICAgICAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZChvYmpDb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShvYmpDb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIF9zZXRFdmVudExpc3RlbmVycyhmb3JtRWxlbWVudCxvYmpDb25maWcpe1xyXG4gICAgICAgIGNvbnN0IGlucHV0TGlzdCA9IEFycmF5LmZyb20oZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChvYmpDb25maWcuaW5wdXRTZWxlY3RvcikpO1xyXG4gICAgICAgIGNvbnN0IGJ1dHRvbkVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKG9iakNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LGJ1dHRvbkVsZW1lbnQsb2JqQ29uZmlnKTtcclxuICAgICAgICBpbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LGJ1dHRvbkVsZW1lbnQsb2JqQ29uZmlnKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBvYmpDb25maWcpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBfc2VuZEZvcm0oZXZ0KXtcclxuICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH1cclxuXHJcbiAgICBlbmFibGVWYWxpZGF0aW9uKCl7XHJcblxyXG4gICAgICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgdGhpcy5fc2VuZEZvcm0pXHJcbiAgICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnModGhpcy5fZm9ybSx0aGlzLl9jb25maWcpO1xyXG5cclxuICAgIH1cclxuXHJcbn0iLCJpbXBvcnQgXCIuL3N0eWxlcy9pbmRleC5jc3NcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSAnLi9zY3JpcHRzL1NlY3Rpb24uanMnO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi9zY3JpcHRzL0NhcmQuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSAnLi9zY3JpcHRzL1BvcHVwV2l0aEZvcm0uanMnO1xyXG5pbXBvcnQgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGZyb20gJy4vc2NyaXB0cy9Qb3B1cFdpdGhDb25maXJtYXRpb24uanMnO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSAnLi9zY3JpcHRzL1BvcHVwV2l0aEltYWdlLmpzJztcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gJy4vc2NyaXB0cy9Vc2VySW5mby5qcyc7XHJcbmltcG9ydCB7Zm9ybUF2YXRhciwgdXNlclBob3RvLCBVUkxBdmF0YXIsIGhhbmRsZUxpa2VDYXJkLCBzZXRJbmZvVXNlciwgY29uZmlnSGVhZGVycywgYnRuUGhvdG8sIFVSTFVzZXIsIFVSTENhcmRzLCBwb3N0Q29udGFpbmVyLCBidG5FZGl0LCBmb3JtUHJvZmlsZSwgYnRuQWRkLCBmb3JtUG9zdCwgY29uZmlnLCBpbnB1dE5hbWUsIGlucHV0QWJvdXR9IGZyb20gXCIuL3NjcmlwdHMvdXRpbHMuanNcIjtcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSAnLi9zY3JpcHRzL0Zvcm1WYWxpZGF0b3IuanMnO1xyXG5pbXBvcnQgQXBpIGZyb20gJy4vc2NyaXB0cy9BcGkuanMnO1xyXG5cclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogY29uZmlnSGVhZGVycy50b2tlbixcclxuICAgIHR5cGU6IGNvbmZpZ0hlYWRlcnMudHlwZVxyXG4gIH1cclxufSk7XHJcblxyXG5jb25zdCBhcnJDYXJkcyA9IGFwaS5nZXRJbml0aWFsQ2FyZHMoVVJMQ2FyZHMpXHJcbmNvbnN0IGluZm9Vc2VyID0gYXBpLmdldEluZm9Vc2VyKFVSTFVzZXIpO1xyXG5cclxuaW5mb1VzZXIudGhlbihkYXRhID0+IHtcclxuICBzZXRJbmZvVXNlcihkYXRhKTtcclxuICBDYXJkLl9pZFVzZXIgPSBkYXRhLl9pZDtcclxufSlcclxuLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSlcclxuXHJcbmFyckNhcmRzLnRoZW4oY2FyZHMgPT4ge1xyXG4gIGNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oe1xyXG4gICAgZGF0YTogY2FyZHMsXHJcbiAgICByZW5kZXJlcjogKGl0ZW0pID0+IHtcclxuICAgICAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGl0ZW0sJyNwb3N0VGVtcGxhdGUnLHBvcHVwV2l0aEltYWdlLm9wZW4scG9wdXBXaXRoQ29uZmlybWF0aW9uLm9wZW4saGFuZGxlTGlrZUNhcmQpO1xyXG4gICAgICBjb25zdCBuZXdDYXJkID0gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcclxuICAgICAgY2FyZFNlY3Rpb24uYWRkSXRlbShuZXdDYXJkKTtcclxuICAgIH1cclxuICB9LHBvc3RDb250YWluZXIpO1xyXG4gIFxyXG4gIGNhcmRTZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcbiAgXHJcbn0pXHJcbi5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpXHJcblxyXG5jb25zdCBvYmpVc2VyID0ge1xyXG4gIHVzZXI6ICcjdXNlck5hbWUnLFxyXG4gIGRlc2NyaXB0aW9uOiAnI3VzZXJEZXNjcmlwdGlvbidcclxufVxyXG5cclxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8ob2JqVXNlcik7XHJcbmNvbnN0IHZhbGlkYXRlUHJvZmlsZSA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZyxmb3JtUHJvZmlsZSk7XHJcbmNvbnN0IHZhbGlkYXRlQXZhdGFyID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLGZvcm1BdmF0YXIpO1xyXG5jb25zdCB2YWxpZGF0ZVBvc3QgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsZm9ybVBvc3QpO1xyXG5jb25zdCBwb3B1cFdpdGhJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZSgnI3BvcHVwSW1hZ2UnKTtcclxuY29uc3QgcG9wdXBXaXRoQ29uZmlybWF0aW9uID0gbmV3IFBvcHVwV2l0aENvbmZpcm1hdGlvbigoaWRDYXJkKSA9PiB7XHJcblxyXG4gIGFwaS5kZWxldGVDYXJkKGAke1VSTENhcmRzfS8ke2lkQ2FyZH1gKVxyXG4gIC50aGVuKHJlcyA9PiB7XHJcbiAgICBjb25zdCBjYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihgc2VjdGlvbltpZGNhcmQ9XCIke2lkQ2FyZH1cIl1gKVxyXG4gICAgY2FyZC5yZW1vdmUoKTtcclxuICB9KVxyXG4gIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhgSHVibyB1biBlcnJvciBhbCBlbGltaW5hciBsYSB0YXJqZXRhIGArZXJyb3IpKVxyXG4gIFxyXG59LCcjcG9wdXBEZWxldGUnKTtcclxuXHJcbmNvbnN0IHBvcHVwRm9ybUVkaXQgPSBuZXcgUG9wdXBXaXRoRm9ybSgoZWxlbWVudCxkYXRhKSA9PiB7XHJcbiAgXHJcbiAgY29uc3QgdXBkYXRlUHJvZmlsZSA9IGFwaS5lZGl0SW5mb1VzZXIoZGF0YSxVUkxVc2VyKTtcclxuICBjb25zdCBidG5Gb3JtID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybV9fYnV0dG9uJyk7XHJcbiAgYnRuRm9ybS50ZXh0Q29udGVudCA9ICdHdWFyZGFuZG8uLi4nO1xyXG4gIFxyXG4gIHVwZGF0ZVByb2ZpbGUudGhlbihyZXMgPT4ge1xyXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8ocmVzLm5hbWUscmVzLmFib3V0KVxyXG4gIH0pXHJcbiAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGBBcXVpIGVzIGVycm9yIGArZXJyb3IpKVxyXG4gIC5maW5hbGx5KCgpID0+IHtcclxuICAgIGJ0bkZvcm0udGV4dENvbnRlbnQgPSAnR3VhcmRhcic7XHJcbiAgfSlcclxuXHJcbn0sJyNwb3B1cEVkaXQnKTtcclxuXHJcbmNvbnN0IHBvcHVwRm9ybUFkZCA9IG5ldyBQb3B1cFdpdGhGb3JtKChlbGVtZW50LGRhdGEpID0+IHtcclxuICBcclxuICBjb25zdCBzZXRDYXJkID0gYXBpLnNldE5ld0NhcmQoZGF0YSxVUkxDYXJkcylcclxuICBjb25zdCBidG5Gb3JtID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybV9fYnV0dG9uJyk7XHJcbiAgYnRuRm9ybS50ZXh0Q29udGVudCA9ICdHdWFyZGFuZG8uLi4nO1xyXG5cclxuICBzZXRDYXJkLnRoZW4ocmVzID0+IHtcclxuXHJcbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvc3RDb250YWluZXIpO1xyXG4gICAgY29uc3QgbmV3Q2FyZCA9IG5ldyBDYXJkKHJlcywnI3Bvc3RUZW1wbGF0ZScscG9wdXBXaXRoSW1hZ2Uub3Blbixwb3B1cFdpdGhDb25maXJtYXRpb24ub3BlbixoYW5kbGVMaWtlQ2FyZCk7XHJcbiAgICBjb25zdCBjYXJkID0gbmV3Q2FyZC5nZW5lcmF0ZUNhcmQoKTtcclxuICAgIGNvbnRhaW5lci5wcmVwZW5kKGNhcmQpO1xyXG5cclxuICB9KVxyXG4gIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZygnSGF5IHVuIGVycm9yOiAnK2Vycm9yKSlcclxuICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICBidG5Gb3JtLnRleHRDb250ZW50ID0gJ0NyZWFyJztcclxuICB9KVxyXG5cclxufSwnI3BvcHVwQWRkJyk7XHJcblxyXG5jb25zdCBwb3B1cEZvcm1QaG90byA9IG5ldyBQb3B1cFdpdGhGb3JtKChlbGVtZW50LGRhdGEpID0+IHtcclxuICBcclxuICBjb25zdCB1cGRhdGVBdmF0YXIgPSBhcGkuZWRpdEltZ1VzZXIoVVJMQXZhdGFyLGRhdGEuYXZhdGFyKTtcclxuICBjb25zdCBidG5Gb3JtID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybV9fYnV0dG9uJyk7XHJcbiAgYnRuRm9ybS50ZXh0Q29udGVudCA9ICdHdWFyZGFuZG8uLi4nO1xyXG4gIFxyXG4gIHVwZGF0ZUF2YXRhci50aGVuKHJlcyA9PiB7XHJcbiAgICB1c2VyUGhvdG8uc3JjID0gcmVzLmF2YXRhclxyXG4gICAgdXNlclBob3RvLmFsdCA9IHJlcy5uYW1lXHJcbiAgfSlcclxuICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5sb2coZXJyb3IpKVxyXG4gIC5maW5hbGx5KCgpID0+IHtcclxuICAgIGJ0bkZvcm0udGV4dENvbnRlbnQgPSAnR3VhcmRhcic7XHJcbiAgfSlcclxuXHJcbn0sJyNwb3B1cFBob3RvJylcclxuXHJcbmJ0bkVkaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpe1xyXG4gIGNvbnN0IHVzZXJEYXRhID0gdXNlckluZm8uZ2V0VXNlckluZm8oKVxyXG4gIGlucHV0TmFtZS52YWx1ZSA9IHVzZXJEYXRhLnVzZXI7XHJcbiAgaW5wdXRBYm91dC52YWx1ZSA9IHVzZXJEYXRhLndvcms7XHJcbiAgcG9wdXBGb3JtRWRpdC5vcGVuKClcclxufSlcclxuXHJcbmJ0blBob3RvLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgcG9wdXBGb3JtUGhvdG8ub3BlbigpXHJcbn0pXHJcblxyXG5wb3B1cEZvcm1QaG90by5zZXRFdmVudExpc3RlbmVycygpXHJcbnBvcHVwRm9ybVBob3RvLmNsb3NlKClcclxuXHJcbnBvcHVwRm9ybUVkaXQuc2V0RXZlbnRMaXN0ZW5lcnMoKVxyXG5wb3B1cEZvcm1FZGl0LmNsb3NlKClcclxuXHJcbmJ0bkFkZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCl7XHJcbiAgcG9wdXBGb3JtQWRkLm9wZW4oKVxyXG59KVxyXG5cclxucG9wdXBGb3JtQWRkLnNldEV2ZW50TGlzdGVuZXJzKClcclxucG9wdXBGb3JtQWRkLmNsb3NlKCk7XHJcblxyXG5wb3B1cFdpdGhJbWFnZS5zZXRFdmVudExpc3RlbmVycygpXHJcbnBvcHVwV2l0aENvbmZpcm1hdGlvbi5zZXRFdmVudExpc3RlbmVycygpXHJcblxyXG52YWxpZGF0ZVByb2ZpbGUuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG52YWxpZGF0ZVBvc3QuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG52YWxpZGF0ZUF2YXRhci5lbmFibGVWYWxpZGF0aW9uKCk7Il0sIm5hbWVzIjpbIlNlY3Rpb24iLCJfcmVmIiwiY29udGFpbmVyU2VsZWN0b3IiLCJkYXRhIiwicmVuZGVyZXIiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImtleSIsInZhbHVlIiwiX3RoaXMiLCJfY2xlYXIiLCJmb3JFYWNoIiwiaXRlbSIsImVsZW1lbnQiLCJhcHBlbmQiLCJpbm5lckhUTUwiLCJDYXJkIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwiaGFuZGxlT3BlblBvcHVwIiwiaGFuZGxlTGlrZUNhcmQiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfbGlrZXMiLCJsaWtlcyIsIl9pZFVzZXIiLCJvd25lciIsIl9pZCIsIl9pZENhcmQiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUNhcmRDbGljayIsIl9oYW5kbGVPcGVuUG9wdXAiLCJfaGFuZGxlTGlrZUNhcmQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2VsZW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsIl9oYW5kbGVMaWtlQ2xpY2siLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJfdGhpczIiLCJfZ2V0VGVtcGxhdGUiLCJzdHlsZSIsImRpc3BsYXkiLCJsaWtlSXRlbSIsImFkZCIsIl9zZXRFdmVudExpc3RlbmVycyIsInNldEF0dHJpYnV0ZSIsInRleHRDb250ZW50IiwibGVuZ3RoIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwIiwib3BlbiIsImJpbmQiLCJyZW1vdmUiLCJldnQiLCJjb250YWlucyIsImNsb3NlIiwid2luZG93IiwiX2hhbmRsZUVzY0Nsb3NlIiwidGFyZ2V0IiwiUG9wdXBXaXRoRm9ybSIsIl9Qb3B1cCIsImNhbGxiYWNrRm9ybSIsInNlbGVjdG9yUG9wdXAiLCJfY2FsbFN1cGVyIiwiX2NhbGxiYWNrRm9ybSIsIl9pbmhlcml0cyIsIl9zdGVwIiwiX2l0ZXJhdG9yIiwiX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiLCJxdWVyeVNlbGVjdG9yQWxsIiwicyIsIm4iLCJkb25lIiwiaW5wdXRUZXh0IiwiZXJyIiwiZiIsIl9nZXQiLCJfZ2V0UHJvdG90eXBlT2YiLCJwcm90b3R5cGUiLCJjYWxsIiwiZm9ybUl0ZW0iLCJyZXNldCIsInByZXZlbnREZWZhdWx0IiwiZm9ybURhdGEiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJQb3B1cFdpdGhDb25maXJtYXRpb24iLCJpZCIsIlBvcHVwV2l0aEltYWdlIiwiVXNlckluZm8iLCJ1c2VyIiwiZGVzY3JpcHRpb24iLCJfc2VsZWN0VXNlciIsIl9zZWxlY3RXb3JrIiwid29yayIsIkFwaSIsImhlYWRlcnMiLCJfaGVhZGVycyIsInVybENhcmRzIiwiZmV0Y2giLCJhdXRob3JpemF0aW9uIiwidHlwZSIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0IiwiY29uY2F0Iiwic3RhdHVzIiwidXJsVXNlciIsIl9yZWYyIiwidXJsIiwibmFtZVByb2ZpbGUiLCJhYm91dE1lIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJhYm91dCIsIl9yZWYzIiwidGl0bGUiLCJhdmF0YXIiLCJncm91cCIsIlVSTFNlcnZlciIsImZvcm1Qcm9maWxlIiwiZm9ybVBvc3QiLCJmb3JtQXZhdGFyIiwiYnRuRWRpdCIsImJ0bkFkZCIsImJ0blBob3RvIiwiaW5wdXROYW1lIiwiaW5wdXRBYm91dCIsInVzZXJQaG90byIsInBvc3RDb250YWluZXIiLCJVUkxVc2VyIiwiVVJMQ2FyZHMiLCJVUkxDYXJkTGlrZSIsIlVSTEF2YXRhciIsImNvbmZpZ0hlYWRlcnMiLCJhcGkiLCJjb25maWciLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImlkQ2FyZCIsImJ0bkxpa2UiLCJhZGRMaWtlQ2FyZCIsImNvdW50TGlrZXMiLCJjYXRjaCIsImVycm9yIiwiY29uc29sZSIsImxvZyIsInJlbW92ZUxpa2VDYXJkIiwiY29udGFpbmVyIiwibmV4dEVsZW1lbnRTaWJsaW5nIiwiRm9ybVZhbGlkYXRvciIsImZvcm0iLCJfY29uZmlnIiwiX2Zvcm0iLCJmb3JtRWxlbWVudCIsImlucHV0RWxlbWVudCIsImVycm9yTWVzc2FnZSIsIm9iakNvbmZpZyIsImVycm9yRWxlbWVudCIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImlucHV0TGlzdCIsInNvbWUiLCJidXR0b25FbGVtZW50IiwiX2hhc0ludmFsaWRJbnB1dCIsIkFycmF5IiwiZnJvbSIsIl90b2dnbGVCdXR0b25TdGF0ZSIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJfc2VuZEZvcm0iLCJhcnJDYXJkcyIsImdldEluaXRpYWxDYXJkcyIsImdldEluZm9Vc2VyIiwic3JjIiwiYWx0IiwiY2FyZHMiLCJjYXJkU2VjdGlvbiIsIm5ld0NhcmQiLCJwb3B1cFdpdGhJbWFnZSIsInBvcHVwV2l0aENvbmZpcm1hdGlvbiIsImdlbmVyYXRlQ2FyZCIsImFkZEl0ZW0iLCJyZW5kZXJJdGVtcyIsInVzZXJJbmZvIiwidmFsaWRhdGVQcm9maWxlIiwidmFsaWRhdGVBdmF0YXIiLCJ2YWxpZGF0ZVBvc3QiLCJkZWxldGVDYXJkIiwicG9wdXBGb3JtRWRpdCIsInVwZGF0ZVByb2ZpbGUiLCJlZGl0SW5mb1VzZXIiLCJidG5Gb3JtIiwic2V0VXNlckluZm8iLCJmaW5hbGx5IiwicG9wdXBGb3JtQWRkIiwic2V0Q2FyZCIsInNldE5ld0NhcmQiLCJjYXJkIiwicHJlcGVuZCIsInBvcHVwRm9ybVBob3RvIiwidXBkYXRlQXZhdGFyIiwiZWRpdEltZ1VzZXIiLCJ1c2VyRGF0YSIsImdldFVzZXJJbmZvIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJlbmFibGVWYWxpZGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==